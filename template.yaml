AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  economins-sam

  Sample SAM Template for economins-sam

Parameters:
  RebApiKey:
    Type: String
    NoEcho: true
  EcosApiKey:
    Type: String
    NoEcho: true
  KrxApiKey:
    Type: String
    NoEcho: true
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.13
    Timeout: 10
    Environment:
      Variables:
        REB_API_KEY: !Ref RebApiKey
        ECOS_API_KEY: !Ref EcosApiKey
        KRX_API_KEY: !Ref KrxApiKey
        S3_BUCKET_NAME: economins
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Resources:
  CollectAptPriceAll:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: collect-reb-apt-price-index-all
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: reb/
      Handler: app.lambda_handler
      Environment:
        Variables:
          CLS_ID: '500001'
          S3_OUTPUT_KEY: data/apt-price-index-all.json
          STATBL_ID: A_2024_00178
      Events:
        CollectAptPriceAllSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST


  CollectAptPriceGreaterSeoul:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: collect-reb-apt-price-index-greater-seoul
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: reb/
      Handler: app.lambda_handler
      Environment:
        Variables:
          CLS_ID: '500002'
          S3_OUTPUT_KEY: data/apt-price-index-greater-seoul.json
          STATBL_ID: A_2024_00178
      Events:
        CollectAptPriceGreaterSeoulSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectAptPriceSeoul:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: collect-reb-apt-price-index-seoul
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: reb/
      Handler: app.lambda_handler
      Environment:
        Variables:
          CLS_ID: '500007'
          S3_OUTPUT_KEY: data/apt-price-index-seoul.json
          STATBL_ID: A_2024_00178
      Events:
        CollectAptPriceSeoulSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectAptVolumeAll:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: collect-reb-apt-volume-all
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: reb/
      Handler: app.lambda_handler
      Environment:
        Variables:
          CLS_ID: '500001'
          S3_OUTPUT_KEY: data/apt-volume-all.json
          STATBL_ID: A_2024_00596
          GRP_ID: '900001'
          ITM_ID: '100001'
      Events:
        CollectAptVolumeAllSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectAptVolumeGreaterSeoul:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: collect-reb-apt-volume-greater-seoul
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: reb/
      Handler: app.lambda_handler
      Environment:
        Variables:
          CLS_ID: '500001'
          S3_OUTPUT_KEY: data/apt-volume-kyeongki.json
          STATBL_ID: A_2024_00596
          GRP_ID: '900010'
          ITM_ID: '100001'
      Events:
        CollectAptVolumeGreaterSeoulSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,10 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectAptVolumeSeoul:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: collect-reb-apt-volume-seoul
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: reb/
      Handler: app.lambda_handler
      Environment:
        Variables:
          CLS_ID: '500001'
          S3_OUTPUT_KEY: data/apt-volume-seoul.json
          STATBL_ID: A_2024_00596
          GRP_ID: '900002'
          ITM_ID: '100001'
      Events:
        CollectAptVolumeSeoulSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectBaseRateKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-base-rate-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/base-rate-korea.json
          STAT_CODE: '722Y001'
          CYCLE: 'M'
          ITEM_CODE: '0101000'
      Events:
        CollectBaseRateKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectCorporateBondRateKorea3AA:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-corporate-bond-korea-3-aa
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/corporate-bond-korea-3-aa.json
          STAT_CODE: '721Y001'
          CYCLE: 'M'
          ITEM_CODE: '7020000'
      Events:
        CollectCorporateBondRateKorea3AASchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectTreasuryBondKorea3:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-treasury-bond-korea-3
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/treasury-bond-korea-3.json
          STAT_CODE: '721Y001'
          CYCLE: 'M'
          ITEM_CODE: '5020000'
      Events:
        CollectTreasuryBondKorea3Schedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectTreasuryBondKorea10:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-treasury-bond-korea-10
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/treasury-bond-korea-10.json
          STAT_CODE: '721Y001'
          CYCLE: 'M'
          ITEM_CODE: '5050000'
      Events:
        CollectTreasuryBondKorea10Schedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectMortgageLoanRateKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-mortgage-load-rate-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/mortgage-rate-korea.json
          STAT_CODE: '121Y006'
          CYCLE: 'M'
          ITEM_CODE: 'BECBLA0302'
      Events:
        CollectMortgageLoanRateKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectHouseholdCreditsKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-household-credits-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/household-credits-korea.json
          STAT_CODE: '151Y001'
          CYCLE: 'Q'
          ITEM_CODE: '1100000'
      Events:
        CollectHouseholdCreditsKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectCurrenctAccountBalanceKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-current-account-balance-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/current-account-balance-korea.json
          STAT_CODE: '301Y017'
          CYCLE: 'M'
          ITEM_CODE: 'SA000'
      Events:
        CollectCurrenctAccountBalanceKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectExchangeRateDollarKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-exchange-rate-dollar-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/exchange-rate-dollar-korea.json
          STAT_CODE: '731Y004'
          CYCLE: 'M'
          ITEM_CODE: '0000001'
          ITEM_CODE2: '0000200'
      Events:
        CollectExchangeRateDollarKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectM2Korea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-m2-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/m2-korea.json
          STAT_CODE: '101Y003'
          CYCLE: 'M'
          ITEM_CODE: 'BBHS00'
      Events:
        CollectM2KoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectCPIKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-cpi-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/cpi-korea.json
          STAT_CODE: '901Y009'
          CYCLE: 'M'
          ITEM_CODE: '0'
      Events:
        CollectCPIKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectPPIKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-ppi-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/ppi-korea.json
          STAT_CODE: '404Y014'
          CYCLE: 'M'
          ITEM_CODE: '*AA'
      Events:
        CollectPPIKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectRealGDPKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-real-gdp-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/real-gdp-korea.json
          STAT_CODE: '200Y104'
          CYCLE: 'Q'
          ITEM_CODE: '1400'
      Events:
        CollectRealGDPKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectUnemploymentRateKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-unemployment-rate-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/unemployment-rate-korea.json
          STAT_CODE: '901Y027'
          CYCLE: 'M'
          ITEM_CODE: 'I61BC'
          ITEM_CODE2: 'I28B'
      Events:
        CollectUnemploymentRateKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectForeignExchangeReservesKorea:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-ecos-foreign-exchange-reserves-korea
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: ecos/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/foreign-exchange-reserves-korea.json
          STAT_CODE: '732Y001'
          CYCLE: 'M'
          ITEM_CODE: '99'
      Events:
        CollectForeignExchangeReservesKoreaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectKospi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-krx-kospi
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: krx/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/kospi.json
          INDEX_TYPE: kospi_dd_trd
      Events:
        CollectKospiSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST

  CollectKosdaq:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: collect-krx-kosdaq
      Role: arn:aws:iam::473618738265:role/economins-lambda
      CodeUri: krx/
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_OUTPUT_KEY: data/kosdaq.json
          INDEX_TYPE: kosdaq_dd_trd
      Events:
        CollectKosdaqSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 21 2,11 * ? *)
            Description: Trigger Lambda on 2st,11th every month at 3PM KST
